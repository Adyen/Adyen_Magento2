name: Integration Tests
on: [pull_request]

jobs:
  build:
    strategy:
      matrix:
        include:
          - PHP_VERSION: 7.4
            MAGENTO_VERSION: 2.4.2
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Magento
        run: docker-compose -f .github/workflows/templates/docker-compose.yml run --rm web make magento
        env:
          MAGENTO_USERNAME: ${{ secrets.MAGENTO_USERNAME }}
          MAGENTO_PASSWORD: ${{ secrets.MAGENTO_PASSWORD }}
          ADYEN_MERCHANT: ${{secrets.ADYEN_MERCHANT}}
          ADYEN_API_KEY: ${{secrets.ADYEN_API_KEY}}
          ADYEN_CLIENT_KEY: ${{secrets.ADYEN_CLIENT_KEY}}
      
      - name: Start webserver 
        run: docker-compose -f .github/workflows/templates/docker-compose.yml up -d web 

      - name: Setup permissions
        run: docker exec magento2-container make fs
        
      - name: Check install
        run: docker exec magento2-container make sys-check

      - name: Install plugin
        run: docker exec -u www-data magento2-container make plugin

      - run: docker exec magento2-container /etc/init.d/cron stop
      
      - name: Run unit tests
        run: docker exec -u www-data magento2-container vendor/bin/phpunit vendor/adyen/module-payment/Test/Unit

      - name: Run GraphQL tests
        run: |
          docker exec -w $MAGENTO_ROOT/dev/tests/api-functional magento2-container $MAGENTO_ROOT/vendor/bin/phpunit --configuration $MAGENTO_ROOT/$PHPUNIT_CONFIG $MAGENTO_ROOT/$TEST_SUITE
        env:
          MAGENTO_ROOT: /var/www/html
          PHPUNIT_CONFIG: vendor/adyen/module-payment/Test/api-functional/phpunit_graphql.xml
          TEST_SUITE: vendor/adyen/module-payment/Test/api-functional/GraphQl

      - name: Sample data deploy
        run: docker exec -u www-data -e MAGENTO_USERNAME -e MAGENTO_PASSWORD magento2-container make sampledata
        env: 
          MAGENTO_USERNAME: ${{ secrets.MAGENTO_USERNAME }}
          MAGENTO_PASSWORD: ${{ secrets.MAGENTO_PASSWORD }}

      - name: Switch to production mode
        run: docker exec -u www-data magento2-container make production bundlejs

      - name: Setup permissions
        run: docker exec magento2-container make fs
      
      - name: Run E2E tests
        continue-on-error: true
        run: docker-compose -f .github/workflows/templates/docker-compose.yml run --rm playwright /e2e.sh
        env:
          INTEGRATION_TESTS_BRANCH: containerized-run
          MAGENTO_BASE_URL: ${{secrets.MAGENTO_BASE_URL}}
          PAYPAL_USERNAME: ${{secrets.PLAYWRIGHT_PAYPAL_USERNAME}}
          PAYPAL_PASSWORD: ${{secrets.PLAYWRIGHT_PAYPAL_PASSWORD}}
        
      - name: Archive test result artifacts
        uses: actions/upload-artifact@v3
        with:
          name: html-report
          path: test-report
