name: Main CI workflow

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version: [7.3] #, 7.4]

    steps:
    - uses: actions/checkout@v2
    - name: Use PHP ${{ matrix.php-version }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        tools: composer:v1,

#    - name: Start Docker
#      run: PHP_VERSION=${{ matrix.php-version }} docker-compose -f .github/workflows/templates/docker-compose.yml up -d
#
#    - name: Create branch for Composer and remove version from composer.json
#      run: git checkout -b integration-test-branch && sed -i '/version/d' ./composer.json

    - name: Test plugin installation
      run: |
        git config --global init.defaultBranch main
        git remote rm origin
        curl -s https://raw.githubusercontent.com/markshust/docker-magento/master/lib/template | bash
        mkdir -p ~/.composer ~/.ssh
        docker-compose -f docker-compose.yml up -d
        bin/setup-composer-auth
#        composer config -g http-basic.repo.magento.com ${MAGENTO_USERNAME} ${MAGENTO_PASSWORD}
#        bin/cli git clone git@github.com:magento/magento2.git .
#        bin/cli git checkout 2.4-develop
#        bin/composer install
      env:
        CI: true
        MAGENTO_USERNAME: ${{ secrets.MAGENTO_USERNAME }}
        MAGENTO_PASSWORD: ${{ secrets.MAGENTO_PASSWORD }}

#    - name: Test plugin installation
#      run: |
#        echo "{\"http-basic\":{\"repo.magento.com\":{\"username\":\"${MAGENTO_USERNAME}\",\"password\":\"${MAGENTO_PASSWORD}\"}}}" > auth.json
#        composer install --prefer-dist
#      env:
#        CI: true
#        MAGENTO_USERNAME: ${{ secrets.MAGENTO_USERNAME }}
#        MAGENTO_PASSWORD: ${{ secrets.MAGENTO_PASSWORD }}

#    - name: Upload the code into the docker container
#      run: docker cp $(pwd) magento-php:/data/extensions/
#
#    - name: Dump working directory
#      run: docker exec magento-php ls -la /data/extensions/workdir && docker exec magento-php ls -la && docker exec magento-php ls -la /data/extensions && docker exec magento-php ls -la /data && docker exec magento-php ls -la /bin
#
#    - name: Enable developer mode
#      run: docker exec magento-php php ./bin/magento deploy:mode:set developer

    - name: Run tests
      run: docker exec magento-php vendor/bin/phpunit /data/extensions/Test/
