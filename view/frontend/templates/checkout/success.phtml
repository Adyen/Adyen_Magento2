<?php
/**
 *                       ######
 *                       ######
 * ############    ####( ######  #####. ######  ############   ############
 * #############  #####( ######  #####. ######  #############  #############
 *        ######  #####( ######  #####. ######  #####  ######  #####  ######
 * ###### ######  #####( ######  #####. ######  #####  #####   #####  ######
 * ###### ######  #####( ######  #####. ######  #####          #####  ######
 * #############  #############  #############  #############  #####  ######
 *  ############   ############  #############   ############  #####  ######
 *                                      ######
 *                               #############
 *                               ############
 *
 * Adyen Payment module (https://www.adyen.com/)
 *
 * Copyright (c) 2015 Adyen BV (https://www.adyen.com/)
 * See LICENSE.txt for license details.
 *
 * Author: Adyen <magento@adyen.com>
 */

/**
 * @var \Adyen\Payment\Block\Checkout\Success $block
 */
?>
<?php if ($block->renderAction()): ?>
    <script type="text/javascript">
        require([
            'jquery',
            'Adyen_Payment/js/bundle'
        ], function ($, adyenComponent) {
            var action = JSON.parse('<?= /* @noEscape */ $block->getAction(); ?>');
            var checkoutComponent = new AdyenCheckout({
                locale: '<?= $block->escapeHtml($block->getLocale()); ?>',
                environment: '<?= $block->escapeHtml($block->getEnvironment()); ?>',
                clientKey: '<?= $block->escapeHtml($block->getClientKey()); ?>'
            });
            try {
                checkoutComponent.createFromAction(action).mount('#ActionContainer');
            } catch(err) {
                // Action component cannot be created
            }
        });
    </script>
    <div id="ActionContainer"></div>
<?php endif; ?>
<?php if ($block->showAdyenGiving()):
    $checkoutConfig = /* @noEscape */
    $block->getSerializedCheckoutConfig();
    $scriptString = <<<script
    window.checkoutConfig = {$checkoutConfig};
script;
?>
<script>
    <?=$scriptString?>
    require([
        'jquery',
        'Adyen_Payment/js/bundle',
        'Adyen_Payment/js/model/adyen-payment-service'
    ], function ($, adyenComponent, adyenPaymentService) {
        debugger;
        function handleOnDonate(state, component) {
            debugger;
            state.isValid // True or false. Specifies whether the shopper has selected a donation amount.
            if (state.isValid) {
                adyenPaymentService.donate(state.data).done(function (response) {
                    debugger;
                });
            } else {

            }
            // state.data // Provides the data that you need to pass in the `/donate` call.
            // component // Provides the active component instance that called this event.
        }

        function handleOnCancel(state, component) {
            debugger;
            // Show a message, unmount the component, or redirect to another page.
        }
        const donationConfig = {
            amounts: {
                currency: "EUR",
                values: [<?=$block->getDonationComponentConfiguration()['donationAmounts'];?>]
            },
            backgroundUrl: "<?=$block->getDonationComponentConfiguration()['backgroundUrl'];?>",
            description: "<?=$block->getDonationComponentConfiguration()['description'];?>",
            logoUrl: "<?=$block->getDonationComponentConfiguration()['logoUrl'];?>",
            name: "<?=$block->getDonationComponentConfiguration()['name'];?>",
            url: "<?=$block->getDonationComponentConfiguration()['website'];?>",
            showCancelButton: true,
            onDonate: handleOnDonate,
            onCancel: handleOnCancel
        };
        var checkoutComponent = new AdyenCheckout({
            locale: '<?= $block->escapeHtml($block->getLocale()); ?>',
            environment: '<?= $block->escapeHtml($block->getEnvironment()); ?>',
            clientKey: '<?= $block->escapeHtml($block->getClientKey()); ?>'
        });
        try {
            const donation = checkoutComponent.create('donation', donationConfig).mount('#donation-container');
        } catch(err) {
            // Action component cannot be created
            console.log(err);
        }
    });
</script>
<div id='donation-container'></div>
<?php endif; ?>

